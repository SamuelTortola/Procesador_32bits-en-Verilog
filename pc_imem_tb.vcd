$date
	Mon Oct 13 16:46:46 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench_PC_IMEM $end
$var wire 32 ! instruction [31:0] $end
$var wire 32 " current_pc [31:0] $end
$var reg 1 # clk $end
$var reg 32 $ next_pc [31:0] $end
$var reg 1 % reset $end
$var integer 32 & i [31:0] $end
$scope module imem_inst $end
$var wire 32 ' instruction [31:0] $end
$var wire 32 ( addr [31:0] $end
$upscope $end
$scope module pc_inst $end
$var wire 1 # clk $end
$var wire 32 ) next_pc [31:0] $end
$var wire 1 % reset $end
$var reg 32 * current_pc [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 *
b0 )
b0 (
b1000100001100000100000 '
bx &
1%
b0 $
0#
b0 "
b1000100001100000100000 !
$end
#5
1#
#10
0#
#12
b0 &
0%
#15
b100001000010010000000000001010 !
b100001000010010000000000001010 '
b1 "
b1 (
b1 *
b1 &
b1 $
b1 )
1#
#20
0#
#25
b1000100001100000100000 !
b1000100001100000100000 '
b10 "
b10 (
b10 *
b10 &
b10 $
b10 )
1#
#30
0#
#35
b11001000010100000100010 !
b11001000010100000100010 '
b11 "
b11 (
b11 *
b11 &
b11 $
b11 )
1#
#40
0#
#45
b101001100011100000100100 !
b101001100011100000100100 '
b100 "
b100 (
b100 *
b100 &
b100 $
b100 )
1#
#50
0#
#55
b111010000100100000100101 !
b111010000100100000100101 '
b101 "
b101 (
b101 *
b101 &
b101 $
b101 )
1#
#60
0#
#65
b1001010100101100000101010 !
b1001010100101100000101010 '
b110 "
b110 (
b110 *
b110 &
b110 $
b110 )
1#
#70
0#
#75
b1011011000110100000000000 !
b1011011000110100000000000 '
b111 "
b111 (
b111 *
b111 &
b111 $
b111 )
1#
#80
0#
#85
b1101011100111100000000010 !
b1101011100111100000000010 '
b1000 "
b1000 (
b1000 *
b1000 &
b1000 $
b1000 )
1#
#90
0#
#95
b1111100001000100000100000 !
b1111100001000100000100000 '
b1001 "
b1001 (
b1001 *
b1001 &
b1001 $
b1001 )
1#
#100
0#
#105
b10001100101001100000100010 !
b10001100101001100000100010 '
b1010 "
b1010 (
b1010 *
b1010 &
b1010 $
b1010 )
1#
#110
0#
#115
b10011101001010100000100100 !
b10011101001010100000100100 '
b1011 "
b1011 (
b1011 *
b1011 &
b1011 $
b1011 )
1#
#120
0#
#125
bx !
bx '
b1100 "
b1100 (
b1100 *
b1100 &
b1100 $
b1100 )
1#
