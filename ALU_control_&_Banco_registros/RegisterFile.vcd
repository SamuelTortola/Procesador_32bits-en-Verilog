$date
	Mon Oct 27 14:12:04 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench_banco $end
$var wire 32 ! read_data2 [31:0] $end
$var wire 32 " read_data1 [31:0] $end
$var reg 1 # RegWrite $end
$var reg 1 $ clk $end
$var reg 5 % read_reg1 [4:0] $end
$var reg 5 & read_reg2 [4:0] $end
$var reg 1 ' reset $end
$var reg 32 ( write_data [31:0] $end
$var reg 5 ) write_reg [4:0] $end
$scope module dut $end
$var wire 1 # RegWrite $end
$var wire 1 $ clk $end
$var wire 32 * read_data1 [31:0] $end
$var wire 32 + read_data2 [31:0] $end
$var wire 5 , read_reg1 [4:0] $end
$var wire 5 - read_reg2 [4:0] $end
$var wire 1 ' reset $end
$var wire 32 . write_data [31:0] $end
$var wire 5 / write_reg [4:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
1'
b0 &
b0 %
0$
0#
b0 "
b0 !
$end
#5
b100000 0
1$
#10
0$
0'
#15
1$
#20
0$
b10100101101001011010010110100101 (
b10100101101001011010010110100101 .
b101 )
b101 /
1#
#25
1$
#30
0$
b10100101101001011010010110100101 "
b10100101101001011010010110100101 *
b101 %
b101 ,
0#
#35
1$
#40
0$
b10101010101010101010101010101010 (
b10101010101010101010101010101010 .
b1100 )
b1100 /
1#
#45
1$
#50
0$
b10101010101010101010101010101010 "
b10101010101010101010101010101010 *
b1100 %
b1100 ,
0#
#55
1$
#60
0$
b11111111111111111111111111111111 (
b11111111111111111111111111111111 .
b0 )
b0 /
1#
#65
1$
#70
0$
b10100101101001011010010110100101 !
b10100101101001011010010110100101 +
b101 &
b101 -
b0 "
b0 *
b0 %
b0 ,
0#
#75
1$
#80
0$
b10010001101000101011001111000 (
b10010001101000101011001111000 .
b11111 )
b11111 /
1#
#85
1$
#90
0$
b10101010101010101010101010101010 !
b10101010101010101010101010101010 +
b1100 &
b1100 -
b10010001101000101011001111000 "
b10010001101000101011001111000 *
b11111 %
b11111 ,
0#
#95
1$
#100
0$
b0 !
b0 +
b10 &
b10 -
b0 "
b0 *
b1 %
b1 ,
#105
1$
#110
0$
#115
1$
#120
0$
